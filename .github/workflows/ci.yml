name: CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r contrib/requirements/requirements-dev.txt
          
      - name: Run black formatter check
        run: black --check --line-length=100 electrum/
        continue-on-error: true
        
      - name: Run isort import check
        run: isort --check-only --profile black --line-length 100 electrum/
        continue-on-error: true
        
      - name: Run ruff linter
        run: ruff check electrum/ || true
        continue-on-error: true

  security:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit[toml] safety
          
      - name: Run bandit security linter
        run: |
          # Skip B101 (assert_used) as asserts are used for important checks in crypto code
          # Skip B110 (try_except_pass) and B311 (blacklist) temporarily
          bandit -r electrum/ -ll --skip B101,B110,B311 -f json || true
        
      - name: Run safety dependency check
        run: |
          pip freeze > requirements-freeze.txt
          safety check --json || true
        continue-on-error: true

  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          # Try to install libsecp256k1-dev if available, otherwise build from source
          sudo apt-get install -y libsecp256k1-dev || {
            echo "libsecp256k1-dev not found, building from source..."
            sudo apt-get install -y autoconf automake libtool
            git clone https://github.com/bitcoin-core/secp256k1.git
            cd secp256k1
            git checkout 199d27cea32203b224b208627533c2e813cd3b21
            ./autogen.sh
            ./configure --enable-module-recovery
            make
            sudo make install
            sudo ldconfig
          }
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r contrib/requirements/requirements.txt
          pip install -r contrib/requirements/requirements-dev.txt
          pip install pytest pytest-cov
          
      - name: Run tests with coverage
        run: pytest electrum/tests/ -v --cov=electrum