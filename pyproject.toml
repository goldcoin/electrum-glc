[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "Electrum-GLC"
dynamic = ["version", "readme"]
description = "Lightweight Goldcoin Wallet"
authors = [{name = "Thomas Voegtlin", email = "thomasv@electrum.org"}]
license = {text = "MIT"}
requires-python = ">=3.11"
dependencies = [
    "qrcode",
    "protobuf>=3.20,<4",
    "qdarkstyle>=2.7",
    "aiorpcx>=0.22.0,<0.23",
    "aiohttp>=3.3.0,<4.0.0",
    "aiohttp_socks>=0.3",
    "certifi",
    "bitstring",
    "attrs>=20.1.0",
    "jsonpatch",
    "dnspython>=2.0",
]

[project.optional-dependencies]
hardware = [
    # Hardware wallet dependencies will be loaded from requirements-hw.txt
]
gui = ["PyQt5>=5.15.2"]
crypto = ["cryptography>=2.6"]
tests = ["pycryptodomex>=3.7", "cryptography>=2.6", "pyaes>=0.1a1"]
scrypt = ["scrypt>=0.9.4"]
full = [
    "PyQt5>=5.15.2",
    "cryptography>=2.6",
    "scrypt>=0.9.4",
]

[project.scripts]
electrum = "electrum.electrum:main"

[tool.setuptools]
packages = ["electrum"]

[tool.setuptools.dynamic]
version = {attr = "electrum.version.ELECTRUM_VERSION"}

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.git
  | \.mypy_cache
  | \.tox
  | build
  | dist
  | electrum/locale
)/
'''

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["electrum"]
skip_glob = ["*/locale/*"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
namespace_packages = true
files = ["electrum"]
exclude = [
    "electrum/tests/",
    "electrum/gui/qt/forms/",
    "electrum/locale/",
]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "W",  # pycodestyle warnings
    "C90",  # mccabe complexity
    "I",  # isort
    "N",  # pep8-naming
    "UP",  # pyupgrade
    "B",  # flake8-bugbear
    "A",  # flake8-builtins
    "C4",  # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "ISC",  # flake8-implicit-str-concat
    "PIE",  # flake8-pie
    "RUF",  # ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise from
    "C901",  # too complex
    "N802",  # function name should be lowercase (Qt override methods)
    "N803",  # argument name should be lowercase (Qt signals)
    "N806",  # variable in function should be lowercase (Qt constants)
    "N815",  # mixedCase variable in class scope (Qt compatibility)
    "N818",  # exception name should end in Error
    "UP007",  # use X | Y for type annotations (requires Python 3.10+)
]
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".tox",
    "build",
    "dist",
    "electrum/locale",
    "electrum/gui/qt/forms",
]

[tool.ruff.lint.per-file-ignores]
"electrum/tests/*" = ["B011"]  # assert False is ok in tests
"electrum/gui/*" = ["N802", "N803", "N806"]  # Qt naming conventions

[tool.bandit]
exclude_dirs = ["electrum/tests", "electrum/gui/qt/forms", "build", "dist"]
# B101: assert_used - Required for crypto verification
# B110: try_except_pass - Some legacy code needs refactoring
# B311: blacklist - Terminology update needed
# B601: paramiko_calls - False positives
skips = ["B101", "B110", "B311", "B601"]

[tool.coverage.run]
source = ["electrum"]
omit = [
    "electrum/tests/*",
    "electrum/gui/qt/forms/*",
    "electrum/locale/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]